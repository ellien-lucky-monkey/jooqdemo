/*
 * This file is generated by jOOQ.
*/
package com.jooq.demo.domain.tables;


import com.jooq.demo.converter.TimestampConverter;
import com.jooq.demo.domain.Keys;
import com.jooq.demo.domain.Test;
import com.jooq.demo.domain.tables.records.RoleResourceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleResource extends TableImpl<RoleResourceRecord> {

    private static final long serialVersionUID = -634291524;

    /**
     * The reference instance of <code>test.role_resource</code>
     */
    public static final RoleResource ROLE_RESOURCE = new RoleResource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoleResourceRecord> getRecordType() {
        return RoleResourceRecord.class;
    }

    /**
     * The column <code>test.role_resource.id</code>.
     */
    public final TableField<RoleResourceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.role_resource.role_id</code>.
     */
    public final TableField<RoleResourceRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.role_resource.resource_id</code>.
     */
    public final TableField<RoleResourceRecord, Integer> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.role_resource.create_time</code>.
     */
    public final TableField<RoleResourceRecord, DateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new TimestampConverter());

    /**
     * The column <code>test.role_resource.update_time</code>.
     */
    public final TableField<RoleResourceRecord, DateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new TimestampConverter());

    /**
     * Create a <code>test.role_resource</code> table reference
     */
    public RoleResource() {
        this("role_resource", null);
    }

    /**
     * Create an aliased <code>test.role_resource</code> table reference
     */
    public RoleResource(String alias) {
        this(alias, ROLE_RESOURCE);
    }

    private RoleResource(String alias, Table<RoleResourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoleResource(String alias, Table<RoleResourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoleResourceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ROLE_RESOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoleResourceRecord> getPrimaryKey() {
        return Keys.KEY_ROLE_RESOURCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoleResourceRecord>> getKeys() {
        return Arrays.<UniqueKey<RoleResourceRecord>>asList(Keys.KEY_ROLE_RESOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoleResourceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoleResourceRecord, ?>>asList(Keys.ROLE_RESOURCE_IBFK_2, Keys.ROLE_RESOURCE_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleResource as(String alias) {
        return new RoleResource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoleResource rename(String name) {
        return new RoleResource(name, null);
    }
}
