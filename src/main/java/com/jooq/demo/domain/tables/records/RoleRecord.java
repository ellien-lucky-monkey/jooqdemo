/*
 * This file is generated by jOOQ.
*/
package com.jooq.demo.domain.tables.records;


import com.jooq.demo.domain.tables.Role;

import javax.annotation.Generated;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record5<Integer, String, Integer, DateTime, DateTime> {

    private static final long serialVersionUID = -1778402298;

    /**
     * Setter for <code>test.role.id</code>.
     */
    public RoleRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>test.role.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.role.role_name</code>.
     */
    public RoleRecord setRoleName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>test.role.role_name</code>.
     */
    public String getRoleName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.role.is_del</code>.
     */
    public RoleRecord setIsDel(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>test.role.is_del</code>.
     */
    public Integer getIsDel() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>test.role.create_time</code>.
     */
    public RoleRecord setCreateTime(DateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>test.role.create_time</code>.
     */
    public DateTime getCreateTime() {
        return (DateTime) get(3);
    }

    /**
     * Setter for <code>test.role.update_time</code>.
     */
    public RoleRecord setUpdateTime(DateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>test.role.update_time</code>.
     */
    public DateTime getUpdateTime() {
        return (DateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, DateTime, DateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, DateTime, DateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Role.ROLE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Role.ROLE.ROLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Role.ROLE.IS_DEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<DateTime> field4() {
        return Role.ROLE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<DateTime> field5() {
        return Role.ROLE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRoleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIsDel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DateTime value4() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DateTime value5() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value2(String value) {
        setRoleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value3(Integer value) {
        setIsDel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value4(DateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value5(DateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord values(Integer value1, String value2, Integer value3, DateTime value4, DateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(Integer id, String roleName, Integer isDel, DateTime createTime, DateTime updateTime) {
        super(Role.ROLE);

        set(0, id);
        set(1, roleName);
        set(2, isDel);
        set(3, createTime);
        set(4, updateTime);
    }
}
